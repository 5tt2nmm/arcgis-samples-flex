<?xml version="1.0" encoding="utf-8"?>
<!--
    Copyright (c) 2013 ESRI

    All rights reserved under the copyright laws of the United States
    and applicable international laws, treaties, and conventions.

    You may freely redistribute and use this sample code, with or
    without modification, provided you include the original copyright
    notice and use restrictions.

    See use restrictions in use_restrictions.txt.
-->
<!---
    @private

    The skin class for the Infograhic component which displays one variables.
    <p><b>Since:</b> ArcGIS API for Flex 3.5</p>
-->
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:mx="library://ns.adobe.com/flex/mx"
        enabled.noData="false">

    <!-- host component -->
    <fx:Metadata>
        [HostComponent("com.esri.ags.components.Infographic")]
    </fx:Metadata>

    <s:states>
        <s:State name="noData"/>
        <s:State name="loading"/>
        <s:State name="hasData"/>
    </s:states>

    <fx:Style>
        @namespace s "library://ns.adobe.com/flex/spark";
        @namespace mx "library://ns.adobe.com/flex/mx";
        
        .axisStyles {
            tickPlacement:none;
        }
        
        .columnSeriesStyles
        {
            fills: #6A3D9A, #3A6CB0, #E7298A, #FD7F00, #66A61E;
        }
        
    </fx:Style>

    <fx:Script>
        <![CDATA[
            import com.esri.ags.components.geoEnrichmentClasses.InfographicData;
            import com.esri.ags.skins.geoEnrichmentClasses.ChartItemGridRenderer;
            import com.esri.ags.skins.geoEnrichmentClasses.LabelGridItemRenderer;
            import com.esri.ags.skins.geoEnrichmentClasses.LowerUpperColumnHeader;

            import mx.collections.ArrayCollection;
            import mx.collections.ArrayList;

            import spark.components.gridClasses.GridColumn;

            [Bindable]
            [Embed(source="../../../../../../assets/loader_tail.swf")]
            private var loader:Class;

            [Bindable]
            private var labelTitleVisible:Boolean = true;

            /**
             *  @private
             */
            override public function styleChanged(styleProp:String):void
            {
                var allStyles:Boolean = !styleProp || styleProp == "styleName";

                super.styleChanged(styleProp);

                if (allStyles || styleProp == "showTitleLabel")
                {
                    labelTitleVisible = getStyle("showTitleLabel") as Boolean;
                }
            }

            /**
             *  @private
             */
            override protected function commitProperties():void
            {
                super.commitProperties();

                if (currentState == "hasData")
                {
                    var data:InfographicData = hostComponent.infographicData;
                    if (data)
                    {
                        var col:GridColumn;
                        var valueColumn:GridColumn;
                        for (var i:int = 0, n:int = data.columns.length; i < n; i++)
                        {
                            col = data.columns.getItemAt(i) as GridColumn;
                            if (col.dataField != "NAME")
                            {
                                valueColumn = col;
                                break;
                            }
                        }
                    }
                    chart.dataProvider = data.rows;
                    serie.yField = valueColumn.dataField;
                }
            }
        ]]>
    </fx:Script>

    <s:VGroup width="100%" height="100%"
              gap="5">
        <s:Label fontWeight="bold"
                 includeInLayout="{labelTitleVisible}"
                 text="{hostComponent.title}"
                 visible="{labelTitleVisible}"/>
        <mx:ColumnChart id="chart"
                        width="100%" height="100%"
                        horizontalAxisStyleNames="axisStyles"
                        seriesFilters="[]"
                        showDataTips="true"
                        verticalAxisStyleNames="axisStyles"
                        visible="false"
                        visible.hasData="true">
            <mx:horizontalAxis>
                <mx:CategoryAxis categoryField="NAME"/>
            </mx:horizontalAxis>
            <mx:series>
                <mx:ColumnSeries id="serie"
                                 styleName="columnSeriesStyles"
                                 xField="NAME" />
            </mx:series>
        </mx:ColumnChart>
    </s:VGroup>

    <s:Group left="0" right="0" top="0" bottom="0"
             includeIn="loading">
        <s:SWFLoader width="15" height="15"
                     horizontalCenter="0"
                     source="{loader}"
                     verticalCenter="0"/>
    </s:Group>

</s:Skin>
